/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.titan.platform.wizards.section;

import java.net.URISyntaxException;
import org.openide.filesystems.FileUtil;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Scanner;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.netbeans.api.project.Project;
import org.openide.util.Exceptions;
import org.openide.util.ImageUtilities;
import org.titan.platform.parser.Parser;
import org.titan.platform.utils.ResourceUtils;
import org.titan.platform.utils.Utils;

import static org.titan.platform.utils.Utils.bundle;

public final class SectionVisualPanel1 extends JPanel {


    private Project project;
    private String repos;
    private static String FS = File.separator;

    /** Creates new form SectionVisualPanel1 */
    public SectionVisualPanel1(Project project) {
        this.project = project;
        try {

            repos = Utils.getConfigAttr(project.getProjectDirectory(), "repos-path");
            repos = ResourceUtils.getAbsolutePath(project.getProjectDirectory().getPath(), repos);
            initComponents();
            loadComboBox();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, bundle(this.getClass(), "invalid.repos.path"), "Erro", JOptionPane.ERROR_MESSAGE);
            throw new RuntimeException();
        }
       
       
    }

    @Override
    public String getName() {
        return bundle(this.getClass(), "step.one");
    }

    private void loadComboBox() {
        org.titan.platform.parser.Package[] packages = Parser.parse(repos+FS+"package"+FS+"package.xml");

        for (org.titan.platform.parser.Package p : packages) {
            pacoteComboBox.addItem(p);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameLabel = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        packageLabel = new javax.swing.JLabel();
        pacoteComboBox = new javax.swing.JComboBox();
        readmeButton = new javax.swing.JButton(new ImageIcon(ImageUtilities.loadImage("resources/info.png")));
        propertiesPanel = new javax.swing.JPanel();

        org.openide.awt.Mnemonics.setLocalizedText(nameLabel, org.openide.util.NbBundle.getMessage(SectionVisualPanel1.class, "SectionVisualPanel1.nameLabel.text")); // NOI18N

        nameField.setText(org.openide.util.NbBundle.getMessage(SectionVisualPanel1.class, "SectionVisualPanel1.nameField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(packageLabel, org.openide.util.NbBundle.getMessage(SectionVisualPanel1.class, "SectionVisualPanel1.packageLabel.text")); // NOI18N

        pacoteComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-- Selecione um pacote --" }));

        org.openide.awt.Mnemonics.setLocalizedText(readmeButton, org.openide.util.NbBundle.getMessage(SectionVisualPanel1.class, "SectionVisualPanel1.readmeButton.text")); // NOI18N
        readmeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readmeButtonActionPerformed(evt);
            }
        });

        propertiesPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout propertiesPanelLayout = new javax.swing.GroupLayout(propertiesPanel);
        propertiesPanel.setLayout(propertiesPanelLayout);
        propertiesPanelLayout.setHorizontalGroup(
            propertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 325, Short.MAX_VALUE)
        );
        propertiesPanelLayout.setVerticalGroup(
            propertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 217, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameLabel)
                    .addComponent(packageLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(propertiesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(pacoteComboBox, 0, 297, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(readmeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(nameField, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(packageLabel)
                        .addComponent(pacoteComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(readmeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(propertiesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void readmeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readmeButtonActionPerformed

        if (pacoteComboBox.getSelectedIndex() > 0) {

            StringBuilder record = new StringBuilder();
            org.titan.platform.parser.Package pack = (org.titan.platform.parser.Package)pacoteComboBox.getSelectedItem();
            String readmePath = repos+FS+"package"+FS+pack.name()+FS+"readme.txt";
            String dbPath = repos+FS+"package"+FS+pack.name()+FS+"db.sql";

            //Readme.txt
            FileInputStream readmefi = null;
            try {
                readmefi = new FileInputStream(readmePath);
            } catch (FileNotFoundException ex) {
               //do nothing nao achou
            }

            if (readmefi != null) {
                Scanner readmeSc = new Scanner(readmefi, "ISO-8859-1");

                while (readmeSc.hasNext()) {
                    record.append(readmeSc.nextLine());
                    record.append("\n");
                }
            }
            //fim readme.txt

            //db.sql
            FileInputStream dbfi = null;
            try {
                dbfi = new FileInputStream(dbPath);
            } catch (FileNotFoundException ex) {
               //n√£o faz nada
            }

            if (dbfi != null) {
                Scanner dbSc = new Scanner(dbfi, "ISO-8859-1");


                while (dbSc.hasNext()) {
                    record.append(dbSc.nextLine());
                    record.append("\n");
                }
            }
            //fim db.sql

            infoDialog info = new infoDialog(record.toString());

            info.setModal(true);
            info.setVisible(true);
        }
    }//GEN-LAST:event_readmeButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel packageLabel;
    private javax.swing.JComboBox pacoteComboBox;
    private javax.swing.JPanel propertiesPanel;
    private javax.swing.JButton readmeButton;
    // End of variables declaration//GEN-END:variables
}
